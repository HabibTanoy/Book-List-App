{"ast":null,"code":"var _jsxFileName = \"/home/john/React app/practice-react/src/Components/Main.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      console.log(response);\n      this.setState({\n        data: response.data[0]\n      });\n    });\n  }\n\n  render() {\n    const allData = this.state.data;\n    console.log(allData);\n    const newMap = allData.map(newData => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, newData.city));\n    }); //         const checkMap = allData.map((dataCheck, index) => {\n    //             return(\n    //                 <div>\n    //                    <div>\n    //                    <table className=\"table table-striped\">\n    //   <thead>\n    //     <tr>\n    //       <th scope=\"col\">#</th>\n    //       <th scope=\"col\">Name</th>\n    //       <th scope=\"col\">UserName</th>\n    //       <th scope=\"col\">Handle</th>\n    //     </tr>\n    //   </thead>\n    //   <tbody>\n    //     <tr>\n    //         <th scope=\"row\">{dataCheck.id}</th>\n    //       <td>{dataCheck.name}</td>\n    //       <td>{dataCheck.username}</td>\n    //       <td>{dataCheck.email}</td>\n    //     </tr>\n    //   </tbody>\n    // </table>\n    //                    </div>\n    //                 </div>\n    //             );\n    //         })\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, newMap);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/john/React app/practice-react/src/Components/Main.js"],"names":["React","Component","axios","Main","state","data","componentDidMount","get","then","response","console","log","setState","render","allData","newMap","map","newData","city"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAC;AADD,KADiB;AAAA;;AAIxBC,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,KAAK,CAACK,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAEI,QAAQ,CAACJ,IAAT,CAAc,CAAd;AADI,OAAd;AAGH,KAND;AAOH;;AACFQ,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWC,IAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,UAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,CAAYC,OAAO,IAAI;AACpC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,OAAO,CAACC,IAAZ,CADF,CADF;AAKD,KANc,CAAf,CAHK,CAWb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACQ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKH,MAFL,CADJ;AAMH;;AAzDwB;;AA4D7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nclass Main extends Component {\n    state = { \n        data:[]\n     }\n     componentDidMount() {\n         axios.get('https://jsonplaceholder.typicode.com/users')\n         .then(response => {\n             console.log(response);\n             this.setState({\n                 data: response.data[0]\n             })\n         })\n     }\n    render() { \n        const allData = this.state.data;\n        console.log(allData)\n        const newMap = allData.map(newData => {\n          return(\n            <div>\n              <p>{newData.city}</p>\n            </div>\n          )\n        })\n\n//         const checkMap = allData.map((dataCheck, index) => {\n//             return(\n//                 <div>\n//                    <div>\n//                    <table className=\"table table-striped\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">#</th>\n//       <th scope=\"col\">Name</th>\n//       <th scope=\"col\">UserName</th>\n//       <th scope=\"col\">Handle</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//     <tr>\n//         <th scope=\"row\">{dataCheck.id}</th>\n//       <td>{dataCheck.name}</td>\n//       <td>{dataCheck.username}</td>\n//       <td>{dataCheck.email}</td>\n//     </tr>\n    \n//   </tbody>\n// </table>\n//                    </div>\n//                 </div>\n//             );\n//         })\n        return ( \n            <div>\n                {/* {checkMap} */}\n                {newMap}\n            </div>\n         );\n    }\n}\n \nexport default Main;"]},"metadata":{},"sourceType":"module"}